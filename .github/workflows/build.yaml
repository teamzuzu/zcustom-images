name: build

on:
  workflow_dispatch:
    inputs:
      runner:
        description: 'runner type'
        required: true
        default: 'ubuntu-latest'
        type: choice
        options:
          - ubuntu-latest
          - self-hosted
      image:
        description: 'select image to build'
        required: true
        default: 'zuzu-devops'
        type: choice
        options:
          - zuzu-devops
          - puppet-r10k
          - test-image
          - proxmox-datacenter-controller

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: teamzuzu/${{ github.event.inputs.image }}
  PLATFORMS: linux/arm64,linux/amd64

jobs:
  build:

    #runs-on: ubuntu-latest
    runs-on: ${{ github.event.inputs.runner }}

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: install cosign
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 #v3.5.0
        with:
          cosign-release: 'v2.2.4'

      - name: setup buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: login to gh registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: get metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: docker build and push
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: ${{ github.event.inputs.image }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: ${{ env.PLATFORMS }}

      - name: sign image
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
